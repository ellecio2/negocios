<?phpnamespace App\Http\Controllers;use Auth;use Illuminate\Http\Request;use Illuminate\Support\Facades\Validator;class VerificationPhoneController extends Controller {    public function store(Request $request) {        if (!Auth::check()) {            return back()->with('error', 'Iniciar sesión para verificar número');        }        $user = Auth::user();        $validator = Validator::make($request->all(), [            'verification_code' => 'required|numeric|digits:6',        ]);        if ($validator->fails()) {            // Si la validación falla, puedes redirigir o devolver una respuesta con los errores            return redirect()->back()->withErrors($validator)->withInput();        }        if ($user->verification_code == $request->input('verification_code')) {            //agrego estos dos por que el sistema pide email_verified_at para verificar, para correo verificar se uso otro campo            $user->phone_verified_at = now();            $user->save();            // Redirige al usuario a la página de éxito o a donde desees            return redirect()->route('shop.view.signup.complete');        } else {            return back()->with('error', 'Código inválido. Por favor, verifica el código ingresado e intenta nuevamente.');        }    }}